import 'package:get/get.dart';
import 'package:loggy/loggy.dart';
import '../../domain/models/client.dart';
import '../../domain/models/report.dart';
import '../../domain/use_case/client_usecase.dart';
import '../../domain/use_case/report_usecase.dart';

class SupportController extends GetxController {
  final RxList<Client> clients = <Client>[].obs;
  final ClientUseCase clientUseCase = Get.find();
  final ReportUseCase reportUseCase = Get.find();

  @override
  void onInit() {
    super.onInit();
    fetchClients();
  }

  Future<void> fetchClients() async {
    logInfo("Fetching clients");
    try {
      clients.value = await clientUseCase.getClients();
    } catch (e) {
      logError('Failed to fetch clients: $e');
    }
  }

  Future<void> createReport({
    required String title,
    required String description,
    required int startTime,
    required int duration,
    required int userId,
    required int supportId,
  }) async {
    logInfo("Creating report");
    int newId = 0; // Assuming ID is generated by the server
    try {
      await reportUseCase.addReport(Report(
        id: newId,
        title: title,
        description: description,
        startTime: startTime,
        duration: duration,
        userId: userId,
        supportId: supportId,
      ));
      logInfo("Report created successfully");
    } catch (e) {
      logError('Failed to create report: $e');
    }
  }
}
